[1/11] cmd.exe /C "cd /D C:\Users\kbutz\RTOS_ESP\main\sample\sample_project\build\esp-idf\main && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/kbutz/esp/v5.2.1/esp-idf/components/spiffs/spiffsgen.py 0x100000 C:/Users/kbutz/RTOS_ESP/main/sample/sample_project/partition C:/Users/kbutz/RTOS_ESP/main/sample/sample_project/build/storage.bin --page-size=256 --obj-name-len=32 --meta-len=4 --use-magic --use-magic-len"
[2/11] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D C:\Users\kbutz\RTOS_ESP\main\sample\sample_project\build\bootloader\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/kbutz/esp/v5.2.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x0 C:/Users/kbutz/RTOS_ESP/main/sample/sample_project/build/bootloader/bootloader.bin"
Bootloader binary size 0x5230 bytes. 0x2dd0 bytes (36%) free.
[3/9] Building CXX object esp-idf/main/CMakeFiles/__idf_main.dir/model.cpp.obj
[4/9] Linking C static library esp-idf\main\libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable main.elf
[7/9] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32s3 image...
Merged 2 ELF sections
Successfully created esp32s3 image.
Generated C:/Users/kbutz/RTOS_ESP/main/sample/sample_project/build/main.bin
[8/9] cmd.exe /C "cd /D C:\Users\kbutz\RTOS_ESP\main\sample\sample_project\build\esp-idf\esptool_py && C:\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe C:/Users/kbutz/esp/v5.2.1/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app C:/Users/kbutz/RTOS_ESP/main/sample/sample_project/build/partition_table/partition-table.bin C:/Users/kbutz/RTOS_ESP/main/sample/sample_project/build/main.bin"
main.bin binary size 0x8eff0 bytes. Smallest app partition is 0x100000 bytes. 0x71010 bytes (44%) free.
[8/9] cmd.exe /C "cd /D C:\Users\kbutz\esp\v5.2.1\esp-idf\components\esptool_py && C:\Espressif\tools\cmake\3.24.0\bin\cmake.exe -D IDF_PATH=C:/Users/kbuesptool.py --chip esp32s3 -p COM6 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 80m --flash_size detect 0x0 bootloader/bootloader.bin 0x10000 main.bin 0x8000 partition_table/partition-table.bin 0x110000 storage.bin
esptool.py v4.7.0
Serial port COM6
Connecting....
Chip is ESP32-S3 (QFN56) (revision v0.1)
Features: WiFi, BLE, Embedded PSRAM 8MB (AP_1v8)
Crystal is 40MHz
MAC: 68:b6:b3:3f:36:3c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Auto-detected Flash size: 32MB
Flash will be erased from 0x00000000 to 0x00005fff...
Flash will be erased from 0x00010000 to 0x0009efff...
Flash will be erased from 0x00008000 to 0x00008fff...
Flash will be erased from 0x00110000 to 0x0020ffff...
Compressed 21040 bytes to 13037...
Writing at 0x00000000... (100 %)
Wrote 21040 bytes (13037 compressed) at 0x00000000 in 0.4 seconds (effective 380.8 kbit/s)...
Hash of data verified.
Compressed 585712 bytes to 283180...
Writing at 0x00010000... (5 %)
Writing at 0x0001aac5... (11 %)
Writing at 0x00021cce... (16 %)
Writing at 0x0002a04d... (22 %)
Writing at 0x0003dfdb... (27 %)
Writing at 0x00044769... (33 %)
Writing at 0x0004ad7d... (38 %)
Writing at 0x00050aac... (44 %)
Writing at 0x000578ea... (50 %)
Writing at 0x00060882... (55 %)
Writing at 0x0006845f... (61 %)
Writing at 0x00071220... (66 %)
Writing at 0x0007721e... (72 %)
Writing at 0x0007e1fd... (77 %)
Writing at 0x00088bc7... (83 %)
Writing at 0x00090a4d... (88 %)
Writing at 0x0009693f... (94 %)
Writing at 0x0009cf54... (100 %)
Wrote 585712 bytes (283180 compressed) at 0x00010000 in 6.9 seconds (effective 679.9 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 117...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (117 compressed) at 0x00008000 in 0.1 seconds (effective 223.5 kbit/s)...
Hash of data verified.
Compressed 1048576 bytes to 15094...
Writing at 0x00110000... (100 %)
Wrote 1048576 bytes (15094 compressed) at 0x00110000 in 9.1 seconds (effective 919.7 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
tz/esp/v5.2.1/esp-idf -D SERIAL_TOOL=C:/Espressif/python_env/idf5.2_py3.11_env/Scripts/python.exe;;C:/Users/kbutz/esp/v5.2.1/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32s3 -D SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args -D WORKING_DIRECTORY=C:/Users/kbutz/RTOS_ESP/main/sample/sample_project/build -P C:/Users/kbutz/esp/v5.2.1/esp-idf/components/esptool_py/run_serial_tool.cmake"
